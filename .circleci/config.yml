# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test

      # Analyse with SonarCloud
      - run: mvn sonar:sonar -Dsonar.projectKey=nzuwera_github-calculator -Dsonar.organization=nzuwera -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=44df6fc9e7d0bbd08e10d6f356fb8db707158868

      # run docker native commands
      - setup_remote_docker:
          docker_layer_caching: true
            # use a primary image that already has Docker (recommended)
            # or install it during a build like we do here
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin
      # build and push Docker image
      - run: |
          TAG=1.0.$CIRCLE_BUILD_NUM
          docker build -t   $DOCKER_HUB_REPO/$APP_NAME:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $DOCKER_HUB_REPO/$APP_NAME:$TAG
      #- run:  curl --data build=true -X POST https://cloud.docker.com/api/build/v1/source/fd09a08a-3433-42a5-b47c-07cdefce55d6/trigger/82efd0d5-0923-4147-89b2-d377030fe907/call/